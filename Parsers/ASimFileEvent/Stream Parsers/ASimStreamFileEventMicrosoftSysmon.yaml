Parser:
  Title: File event ASIM stream parser for Sysmon
  Version: '0.1'
  LastUpdated: Jan 3 2023
  Original version: '0.4'
Product:
  Name: Windows Sysmon
Normalization:
  Schema: FileEvent
  Version: '0.2.1'
References:
- Title: ASIM File Event Schema
  Link: https://aka.ms/ASimFileEventDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
Description: This ASIM parser supports stream normalization of Sysmon event 11, 23, and 26, stored in either the Event or WindowsEvent tables, to the ASIM file event schema.
ParserQueries: 
  - Data type: Event
  - Filter: source | where Source == "Microsoft-Windows-Sysmon" and tonit(EventID) in (11,23,26)
      Event
        | project EventID, EventData, Computer, TimeGenerated, _ResourceId, _SubscriptionId, Source, Type // , _ItemId 
        | extend EventID = toint(EventID)
        | where Source == "Microsoft-Windows-Sysmon" and EventID in (11,23,26)
        | project-away Source
        | parse EventData with * '<Data Name="RuleName">' RuleName '</Data>' * 
        | parse EventData with * '<Data Name="UtcTime">' UtcTime:datetime '</Data>' *   
        | parse EventData with * '<Data Name="ProcessGuid">' ProcessGuid '</Data>' *  
        | parse EventData with * '<Data Name="ProcessId">' ProcessId '</Data>' *  
        | parse EventData with * '<Data Name="Image">' Image '</Data>' *  
        | parse EventData with * '<Data Name="User">' User '</Data>' *
        | parse EventData with * '<Data Name="TargetFilename">' TargetFilename '</Data>'  *
        | parse EventData with * '<Data Name="Hashes">' Hashes '</Data>' *
        | parse EventData with * '<Data Name="CreationUtcTime">' CreationUtcTime:datetime '</Data>' *
        | project-rename 
            ActingProcessGuid = ProcessGuid,
            ActingProcessId = ProcessId,
            ActorUsername = User,
            ActingProcessName = Image,
            TargetFileCreationTime=CreationUtcTime,
            TargetFilePath=TargetFilename,
            EventStartTime=UtcTime
        | project-away EventData
        | project-rename
           DvcHostname = Computer,
           //EventUid = _ItemId,
           DvcScopeId = _SubscriptionId,
           DvcId = _ResourceId
        | extend
           EventType=iff (EventID == 11, 'FileCreated', 'FileDeleted'),
           EventProduct = 'Sysmon',
           EventVendor = 'Microsoft',
           EventSchema = 'FileEvent',
           EventSchemaVersion = '0.2.1',
           EventResult = 'Success',
           EventSeverity = 'Informational',
           DvcOs='Windows',
           TargetFilePathType = 'Windows',
           DvcIdType = iff (DvcId != "", "AzureResourceId", ""),
           EventCount = int(1),
           EventEndTime = EventStartTime,
           EventOriginalType = tostring(EventID),
           TargetFileName = tostring(split(TargetFilePath,'\\')[-1]),
           ActorUsernameType = iff(isnotempty(ActorUsername),'Windows', ''),
           RuleName = iff (RuleName == "-", "", RuleName)
        | parse Hashes with Hashes 
        | parse Hashes with * 'MD5=' MD5 ',' *
        | parse Hashes with * 'SHA1=' SHA1 ',' *
        | parse Hashes with * 'IMPHASH=' IMPHASH ',' *
        | parse Hashes with * 'SHA256=' SHA256 ',' *
        | project-rename
            TargetFileMD5 = MD5,
            TargetFileSHA1 = SHA1,
            TargetFileIMPHASH = IMPHASH,
            TargetFileSHA256 = SHA256
        | extend
           Hash=case (
                isnotempty(TargetFileSHA256), TargetFileSHA256, 
                isnotempty(TargetFileSHA1), TargetFileSHA1,
                isnotempty(TargetFileMD5), TargetFileMD5,
                TargetFileIMPHASH)
        //| extend
        //   HashType = tostring(parse_json('["SHA256", "SHA1", "MD5", "IMPHASH"]')[array_index_of(pack_array(TargetFileSHA256, TargetFileSHA1, TargetFileMD5,TargetFileIMPHASH),Hash)]) -- array_index_of not supported for now.
        // -- Typed entity identifiers
        | extend
           ActorWindowsUsername = ActorUsername
        // -- Aliases
        | extend
           Process = ActingProcessName,
           Dvc = DvcHostname,
           FilePath = TargetFilePath,
           FileName = TargetFileName,
           User = ActorUsername
        | project-away EventID, Hashes

  - Data type: WindowsEvent
  - Filter: source | Provider == "Microsoft-Windows-Sysmon" and toint(EventID) in (11,23,26)
  - Parser: |
     WindowsEvent 
        | project EventID, EventData, Computer, TimeGenerated, _ResourceId, _SubscriptionId, Provider, Type // , _ItemId 
        | extend EventID = toint(EventID)
        | where Provider == "Microsoft-Windows-Sysmon" and toint(EventID) in (11,23,26)
        | extend EventData = parse_json(EventData)
        | project-away Provider
        | extend 
            TargetFileCreationTime=todatetime(EventData.CreationUtcTime),
            TargetFilePath=tostring(EventData.TargetFilename),
            ActingProcessName = tostring(EventData.Image),
            ActingProcessId = tostring(EventData.ProcessId),
            ActingProcessGuid = tostring(EventData.ProcessGuid),
            ActorUsername = tostring(EventData.User),
            EventStartTime = todatetime(EventData.UtcTime),
            RuleName = tostring(EventData.RuleName),
            Hashes = tostring(EventData.Hashes)
          | parse ActingProcessGuid with "{" ActingProcessGuid "}"
          | project-away EventData
      | project-rename
          DvcHostname = Computer,
          //EventUid = _ItemId,
          DvcScopeId = _SubscriptionId,
          DvcId = _ResourceId
      | extend
          EventType=iff (EventID == 11, 'FileCreated', 'FileDeleted'),
          EventProduct = 'Sysmon',
          EventVendor = 'Microsoft',
          EventSchema = 'FileEvent',
          EventSchemaVersion = '0.2.1',
          EventResult = 'Success',
          EventSeverity = 'Informational',
          DvcOs='Windows',
          TargetFilePathType = 'Windows',
          DvcIdType = iff (DvcId != "", "AzureResourceId", ""),
          EventCount = int(1),
          EventEndTime = EventStartTime,
          EventOriginalType = tostring(EventID),
          TargetFileName = tostring(split(TargetFilePath,'\\')[-1]),
          ActorUsernameType = iff(isnotempty(ActorUsername),'Windows', ''),
          RuleName = iff (RuleName == "-", "", RuleName)
       | parse Hashes with Hashes 
       | parse Hashes with * 'MD5=' MD5 ',' *
       | parse Hashes with * 'SHA1=' SHA1 ',' *
       | parse Hashes with * 'IMPHASH=' IMPHASH ',' *
       | parse Hashes with * 'SHA256=' SHA256 ',' *
       | project-rename
           TargetFileMD5 = MD5,
           TargetFileSHA1 = SHA1,
           TargetFileIMPHASH = IMPHASH,
           TargetFileSHA256 = SHA256
       | extend
           Hash=case (
              isnotempty(TargetFileSHA256), TargetFileSHA256, 
              isnotempty(TargetFileSHA1), TargetFileSHA1,
              isnotempty(TargetFileMD5), TargetFileMD5,
              TargetFileIMPHASH
            )
       //| extend
       //   HashType = tostring(parse_json('["SHA256", "SHA1", "MD5", "IMPHASH"]')[array_index_of(pack_array(TargetFileSHA256, TargetFileSHA1, TargetFileMD5,TargetFileIMPHASH),Hash)]) -- array_index_of not supported for now.
        // -- Typed entity identifiers
       | extend
          ActorWindowsUsername = ActorUsername
       // -- Aliases
       | extend
          Process = ActingProcessName,
          Dvc = DvcHostname,
          FilePath = TargetFilePath,
          FileName = TargetFileName,
          User = ActorUsername
       | project-away EventID, Hashes